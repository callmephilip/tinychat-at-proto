{
  "lexicon": 1,
  "id": "chat.tinychat.server.getMessages",
  "defs": {
    "main": {
      "type": "query",
      "description": "Gets a list of of messages for a given channel.",
      "parameters": {
        "type": "params",
        "required": ["server", "channel", "limit"],
        "properties": {
          "server": {
            "type": "string",
            "format": "at-uri",
            "description": "Server AT-URI"
          },
          "channel": {
            "type": "string",
            "format": "tid",
            "description": "Channel id"
          },
          "parent": {
            "type": "string",
            "format": "at-uri",
            "description": "Parent message at-uri. Use this to pull messages from a specific thread"
          },
          "limit": {
            "type": "integer",
            "default": 10,
            "description": "Maximum number of messages to return"
          },
          "cursor": {
            "type": "string",
            "description": "Cursor for pagination. Pagination goes backwards - from more recent messages to older ones"
          },
          "sort": {
            "type": "string",
            "knownValues": ["latest", "chronological"],
            "default": "latest",
            "description": "Specifies how to sort messages: latest first VS chronological order"
          }
        }
      },
      "output": {
        "encoding": "application/json",
        "schema": {
          "type": "object",
          "required": ["messages"],
          "properties": {
            "messages": {
              "type": "array",
              "items": {
                "type": "ref",
                "ref": "chat.tinychat.core.defs#messageView"
              }
            },
            "prevCursor": {
              "type": "string",
              "description": "Cursor for fetching previous page"
            },
            "nextCursor": {
              "type": "string",
              "description": "Cursor for fetching next page"
            }
          }
        }
      }
    }
  }
}
